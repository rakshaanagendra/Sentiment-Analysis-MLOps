name: CI Pipeline  # The name of the workflow (shows up in GitHub Actions tab)

on:                # When should this workflow run?
  push:            # Run on every git push
    branches: [ main ]   # Only run if push happens on 'main' branch
  pull_request:    # Also run when a pull request is opened/updated
    branches: [ main ]

jobs:              # Workflows have jobs. Each job runs on a machine (like a VM).
  build:           # Name of our job
    runs-on: ubuntu-latest   # Type of machine (GitHub provides Ubuntu for free)

    steps:         # A job is a sequence of steps
      - name: Checkout code
        uses: actions/checkout@v4   # Action to pull your repo code into the VM

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"    # Choose Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Kaggle
        run: pip install kaggle

      - name: Setup Kaggle credentials
        run: |
          mkdir -p ~/.kaggle
          echo '${{ secrets.KAGGLE_JSON }}' > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json


      - name: Download IMDB dataset
        run: |
          mkdir -p data/raw/acImdb
          kaggle datasets download -d lakshmi25npathi/imdb-dataset-of-50k-movie-reviews -p data/raw
          unzip -o data/raw/imdb-dataset-of-50k-movie-reviews.zip -d data/raw/acImdb
          mv "data/raw/acImdb/IMDB Dataset.csv" "data/raw/acImdb/IMDB-Dataset.csv"

      - name: Run training script
        run: |
          PYTHONPATH=${{ github.workspace }} python -m src.train

      - name: Run tests
        run: |
          PYTHONPATH=${{ github.workspace }} pytest tests/ --maxfail=1 --disable-warnings -q

      - name: Upload confusion matrix
        uses: actions/upload-artifact@v4
        with:
          name: confusion-matrix
          path: outputs/confusion_matrix.png

      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: sentiment-model
          path: outputs/model/logreg_tfidf_pipeline.pkl


#With this file, every time we push to main, GitHub will:
#Create a clean Ubuntu machine
#Install Python + dependencies
#Run your training script

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: "auto-release-${{ github.run_number }}"
          body: "Auto release for commit ${{ github.sha }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload model to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: outputs/model/logreg_tfidf_pipeline.pkl
          asset_name: logreg_tfidf_pipeline.pkl
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload confusion matrix to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: outputs/confusion_matrix.png
          asset_name: confusion_matrix.png
          asset_content_type: image/png
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
